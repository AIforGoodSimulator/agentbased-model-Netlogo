V1 Conceptual Model NETLOGO CODE
Physical Layout Module:
Agent Module:
Network Module:
Activity Module:
Contagion Module:
Interventions Module:


________________
Physical Layout Module:
GIS APPROACH
extensions [ gis ]
globals [
  det-building-dataset
  gov-building-dataset
  isobox-double-dataset
  isobox-single-dataset
  levels-dataset
  med-facil-dataset
  mil-shelters-dataset
  misc-building-dataset
  mosque-dataset
  msf-zone-dataset
  ngo-building-dataset
  pow-n-pump-sta-dataset
  ric-outline-dataset
  river-dataset
  road-borders-dataset
  road-fill-dataset
  rubb-halls-dataset
  sec-building-dataset
  sewage-tank-dataset
  sgv-markers-dataset
  tents-dataset
  unhcr-tents-dataset
  walls-borders-dataset
  wash-facil-dataset
  wash-icons-dataset
  wash-n-sinks-dataset
  water-pumps1-dataset
  water-pumps2-dataset
  zones-labels-dataset
  zones-on-31219-dataset
]


patches-own [
 land-type
]


breed [ sewage-tanks sewage-tank ]
breed [ water-pumps water-pump ]
breed [ wash-n-sinks wash-n-sink ]
breed [ tent-centroids tent-centroid ]




to setup


  clear-all
  ;gis:load-coordinate-system (word "WGS_84_Geographic.prj")
  load-data
  display-all
  createpeople
  createfriendlinks
  reset-ticks
end


to load-data
  set det-building-dataset gis:load-dataset "Detention_Buildings.shp"
  set gov-building-dataset gis:load-dataset "Government_Buildings.shp"
  ;set isobox-double-dataset gis:load-dataset "ISObox double.shp"
  ;set isobox-single-dataset gis:load-dataset "ISObox single.shp"
  ;set levels-dataset gis:load-dataset "Levels.shp"
  set med-facil-dataset gis:load-dataset "Medical_Facilities.shp"
  set mil-shelters-dataset gis:load-dataset "Military_Shelters.shp"
  set misc-building-dataset gis:load-dataset "MISC_buildings.shp"
  set mosque-dataset gis:load-dataset "Mosque.shp"
  ;set msf-zone-dataset gis:load-dataset "MSF zone.shp"
  set ngo-building-dataset gis:load-dataset "NGO_buildings.shp"
  set pow-n-pump-sta-dataset gis:load-dataset "Power_and_Pump_Stations.shp"
  ;set ric-outline-dataset gis:load-dataset "RIC outline.shp"
  set river-dataset gis:load-dataset "River.shp"
  ;set road-borders-dataset gis:load-dataset "Road-borders.shp"
  set road-fill-dataset gis:load-dataset "Road-fill.shp"
  ;set rubb-halls-dataset gis:load-dataset "Rubb Halls.shp"
  set sec-building-dataset gis:load-dataset "Sections_Buildings.shp"
  set sewage-tank-dataset gis:load-dataset "Sewage Tank.shp"
  ;set sgv-markers-dataset gis:load-dataset "SGV Markers.shp"
  set tents-dataset gis:load-dataset "Tents.shp"
  set unhcr-tents-dataset gis:load-dataset "UNHCR_Tentst.shp"
  ;set walls-borders-dataset gis:load-dataset "Walls Borders.shp"
  ;set wash-facil-dataset gis:load-dataset "WASH Facilities.shp"
  ;set wash-icons-dataset gis:load-dataset "WASH Icons.shp"
  set wash-n-sinks-dataset gis:load-dataset "Washpads and Sinks.shp"
  set water-pumps1-dataset gis:load-dataset "Water Pumps1.shp"
  set water-pumps2-dataset gis:load-dataset "Water Pumps2.shp"
  ;set zones-labels-dataset gis:load-dataset "Zones Labels.shp"
  ;set zones-on-31219-dataset gis:load-dataset "Zones on 3.12.19 RIC vs OG.shp"


  gis:set-world-envelope (gis:envelope-union-of
    (gis:envelope-of det-building-dataset)
    (gis:envelope-of gov-building-dataset)
    ;(gis:envelope-of isobox-double-dataset)
    ;(gis:envelope-of isobox-single-dataset)
    ;(gis:envelope-of levels-dataset)
    (gis:envelope-of med-facil-dataset)
    (gis:envelope-of mil-shelters-dataset)
    (gis:envelope-of misc-building-dataset)
    (gis:envelope-of mosque-dataset)
    ;(gis:envelope-of msf-zone-dataset)
    (gis:envelope-of ngo-building-dataset)
    (gis:envelope-of pow-n-pump-sta-dataset)
    ;(gis:envelope-of ric-outline-dataset)
    (gis:envelope-of river-dataset)
    ;(gis:envelope-of road-borders-dataset)
    (gis:envelope-of road-fill-dataset)
    ;(gis:envelope-of rubb-halls-dataset)
    (gis:envelope-of sec-building-dataset)
    (gis:envelope-of sewage-tank-dataset)
    ;(gis:envelope-of sgv-markers-dataset)
    (gis:envelope-of tents-dataset)
    (gis:envelope-of unhcr-tents-dataset)
    ;(gis:envelope-of walls-borders-dataset)
    ;(gis:envelope-of wash-facil-dataset)
    ;(gis:envelope-of wash-icons-dataset)
    (gis:envelope-of wash-n-sinks-dataset)
    (gis:envelope-of water-pumps1-dataset)
    (gis:envelope-of water-pumps2-dataset)
    ;(gis:envelope-of zones-labels-dataset)
    ;(gis:envelope-of zones-on-31219-dataset)
    )
end


to display-all
  display-rivers
  display-buildings
end


to display-rivers
  gis:set-drawing-color blue
  gis:draw river-dataset 1
end


to display-buildings
  ; det-building
  ask patches gis:intersecting det-building-dataset
  [ set pcolor green set land-type "detention-building" ]
  ; gov-building
  ask patches gis:intersecting gov-building-dataset
  [ set pcolor green + 3 set land-type "government-building" ]
  ; med-facil
  ask patches gis:intersecting med-facil-dataset
  [ set pcolor yellow]
  ; mil-shelters
  ask patches gis:intersecting mil-shelters-dataset
  [ set pcolor orange ]
  ; misc-building
  ask patches gis:intersecting misc-building-dataset
  [ set pcolor yellow + 3 ]
  ; mosque
  ask patches gis:intersecting mosque-dataset
  [ set pcolor white ]
  ; ngo
  ask patches gis:intersecting ngo-building-dataset
  [ set pcolor pink ]
  ; pow-n-pump
  ask patches gis:intersecting pow-n-pump-sta-dataset
  [ set pcolor blue + 2 ]
  ; road
  ask patches gis:intersecting road-fill-dataset
  [ set pcolor gray ]
  ;gis:set-drawing-color gray
  ;gis:draw road-fill-dataset 1
  ; sec-building
  ask patches gis:intersecting sec-building-dataset
  [ set pcolor brown + 2 ]
  ; tents
  ask patches gis:intersecting unhcr-tents-dataset
  [ set pcolor red ]
  ask patches gis:intersecting tents-dataset
  [ set pcolor red + 1 ]
  ask patches gis:intersecting sewage-tank-dataset
  [ set pcolor brown]
  ask patches gis:intersecting water-pumps1-dataset
  [ sprout 1 [set color blue set size 30 ]]
  ask patches gis:intersecting water-pumps2-dataset
  [ sprout 1 [set color blue set size 30 ]]
  ask patches gis:intersecting wash-n-sinks-dataset
  [ set pcolor blue - 1]
  set-default-shape turtles "circle"
  
  foreach gis:feature-list-of tents-dataset [ vector-feature ->
    let cent gis:location-of gis:centroid-of vector-feature
    ; centroid will be an empty list if it lies outside the bounds
    ; of the current NetLogo world, as defined by our current GIS
    ; coordinate transformation
    if not empty? cent
    [ create-tent-centroids 1
      [ set xcor item 0 cent
        set ycor item 1 cent
        set size 0.2
        set color pcolor
      ]
  
    ]
  ]
end


 foreach gis:feature-list-of wash-n-sinks-dataset [ vector-feature ->
    let cent gis:location-of gis:centroid-of vector-feature
    ; centroid will be an empty list if it lies outside the bounds
    ; of the current NetLogo world, as defined by our current GIS
    ; coordinate transformation
    if not empty? cent
    [ create-wash-n-sinks 1
      [ set xcor item 0 cent
        set ycor item 1 cent
        set size 0.2
        set color pcolor
      ]
  
    ]
  ]
end


; PICTURE APPROACH - BACKUP OPTION
; **Canvas settings**
; Location of origin = corner
; Max-pxcor = 1000
; Max-pycor = 707
; Patch size = 1


; import-pcolors-rgb "Layout.png"


________________
Agent Module:


**Sliders / input boxes for input**
number_refugees = 500


male_percent = 0.54 ; 6981/12883 = 54%


age_10 = 0.21 ; 2727/12883 = 21%
age_20 = 0.38 ; 4922/12883 = 38% ; youth cutoff
age_30 = 0.64 ; 8280/12883 = 64%
age_40 = 0.82 ; 10522/12883 = 82%
age_50 = 0.91 ; 11711/12883 = 91%
age_60 = 0.96 ; 12421/12883 = 96% ; adult cutoff
age_70 = 0.99 ; 12779/12883 = 99%


afghan = 0.78 ; 7919/10135 = 78%
cameroon = 0.795 ; 149/10135 = 1.5%
congo = 0.865 ; 706/10135 = 7%
iran = 0.875 ; 107/10135 = 1%
iraq = 0.883 ; 83/10135 = 0.8%
somalia = 0. 923 ; 442/10135 = 4%
syria = 1 ; 729/10135 = 7%


value_std_dev = 10




breed [refugees refugee]


tent-centroids-own [
  nationality
  hhnumber
  hhparents
  hhkids_elderly
]


refugees-own [
  nationality
  houselocation
  age
  sex
  activitycategory
  activitylocation
  pdi
  idv
  mas
  uai
  lto
  ivr
  ach
  pow
  hed
  stm
  sd
  ben
  cft
  sec
  uni
  ig2-ach
  ig2-pow
  ig2-hed
  ig2-stm
  ig2-sd
  ig2-ben
  ig2-cft
  ig2-sec
  ig2-uni
]


to setage
  let dice1 random-float 1
  set age (ifelse-value
    dice1 < age_20 [ “youth” ] ; youth are below 20
    dice1 >= age_20 and dice1 < age_60 [ “adult”] ; adults are below 60
    [ “elderly” ]) ; elderly are above 60
end


to setsex
  let dice2 random-float 1
  ifelse dice2 >= male_percent [ set sex "female" ] [ set sex "male" ]
end


to setnationality
  let dice3 random-float 1
  set nationality (ifelse-value
    dice3 <= afghan [“afghan”]
    dice3 > afghan and dice3 <= cameroon [“cameroon”]
    dice3 > cameroon and dice3 <= congo [“congo”]
    dice3 > congo and dice3 <= iran [“iran”]
    dice3 > iran and dice3 <= iraq [“iraq”]
    dice3 > iraq and dice3 <= somalia [“somalia”]
    [“syria”])
end


to sethhcharacteristics ; used data from UN
  let dice4 random-float 1
  (ifelse 
    nationality = “afghan” [
      set hhnumber (ifelse-value
        dice4 <= 0.03 [2] ; split in half using data from column 4
        dice4 > 0.03 and dice4 <= 0.06 [3] ; split in half using data from column 4
        dice4 > 0.06 and dice4 <= 0.14 [4] ; split in half using data from column 5
        dice4 > 0.14 and dice4 <= 0.23 [5] ; split in half using data from column 5
        [6])
      set hhparents (ifelse-value
        dice4 <= 0.01 [“father only”] ; column 16
        dice4 > 0.01 and dice4 <= 0.06 [“mother only”] ; column 15
        [“father and mother”]) 
      set hhkids_elderly (ifelse-value
        dice4 <= 0.64 [“kids only”] ; column 10 - 12 normalized to 100
        dice4 > 0.64 and dice4 <= 0.83 [“elderly only”] ; column 10 - 12 normalized to 100
        [“kids and elderly”])
    ]
    nationality = “cameroon” [ 
      set hhnumber (ifelse-value
        dice4 <= 0.12 [1] ; column 3
        dice4 > 0.12 and dice4 <= 0.23 [2] ; split in half using data from column 4
        dice4 > 0.23 and dice4 <= 0.35 [3] ; split in half using data from column 4
        dice4 > 0.35 and dice4 <= 0.47 [4] ; split in half using data from column 5
        dice4 > 0.47 and dice4 <= 0.59 [5] ; split in half using data from column 5
        [6])
      set hhparents (ifelse-value
        dice4 <= 0.04 [“father only”] ; column 16
        dice4 > 0.04 and dice4 <= 0.25 [“mother only”] ; column 15
        [“father and mother”])
      set hhkids_elderly (ifelse-value
        dice4 <= 0.67 [“kids only”] ; column 10 - 12 normalized to 100
        dice4 > 0.67 and dice4 <= 0.87 [“elderly only”] ; column 10 - 12 normalized to 100
        [“kids and elderly”])
    ]
    nationality = “congo” [ 
      set hhnumber (ifelse-value
        dice4 <= 0.13 [1] ; column 3
        dice4 > 0.13 and dice4 <= 0.28 [2] ; split in half using data from column 4
        dice4 > 0.28 and dice4 <= 0.43 [3] ; split in half using data from column 4
        dice4 > 0.43 and dice4 <= 0.58 [4] ; split in half using data from column 5
        dice4 > 0.58 and dice4 <= 0.72 [5] ; split in half using data from column 5
        [6])
      set hhparents (ifelse-value
        dice4 <= 0.12 [“father only”] ; column 16
        dice4 > 0.12 and dice4 <= 0.44 [“mother only”] ; column 15
        [“father and mother”])
      set hhkids_elderly (ifelse-value
        dice4 <= 0.73 [“kids only”] ; column 10 - 12 normalized to 100
        dice4 > 0.73 and dice4 <= 0.91 [“elderly only”] ; column 10 - 12 normalized to 100
        [“kids and elderly”])      
    ]
    nationality = “iran” [ 
      set hhnumber (ifelse-value
        dice4 <= 0.07 [1] ; column 3
        dice4 > 0.07 and dice4 <= 0.30 [2] ; split in half using data from column 4
        dice4 > 0.30 and dice4 <= 0.52 [3] ; split in half using data from column 4
        dice4 > 0.52 and dice4 <= 0.72 [4] ; split in half using data from column 5
        dice4 > 0.72 and dice4 <= 0.91 [5] ; split in half using data from column 5
        [6])
      set hhparents (ifelse-value
        dice4 <= 0.01 [“father only”] ; column 16
        dice4 > 0.01 and dice4 <= 0.05 [“mother only”] ; column 15
        [“father and mother”])
      set hhkids_elderly (ifelse-value
        dice4 <= 0.68 [“kids only”] ; column 10 - 12 normalized to 100
        dice4 > 0.68 and dice4 <= 0.97 [“elderly only”] ; column 10 - 12 normalized to 100
        [“kids and elderly”])      
    ]
    nationality = “iraq” [  
      set hhnumber (ifelse-value
        dice4 <= 0.01 [1] ; column 3
        dice4 > 0.01 and dice4 <= 0.06 [2] ; split in half using data from column 4
        dice4 > 0.06 and dice4 <= 0.11 [3] ; split in half using data from column 4
        dice4 > 0.11 and dice4 <= 0.22 [4] ; split in half using data from column 5
        dice4 > 0.22 and dice4 <= 0.32 [5] ; split in half using data from column 5
        [6])
      set hhparents (ifelse-value
        dice4 <= 0.02 [“father only”] ; column 16
        dice4 > 0.02 and dice4 <= 0.14 [“mother only”] ; column 15
        [“father and mother”])
      set hhkids_elderly (ifelse-value
        dice4 <= 0.64 [“kids only”] ; column 10 - 12 normalized to 100
        dice4 > 0.64 and dice4 <= 0.85 [“elderly only”] ; column 10 - 12 normalized to 100
        [“kids and elderly”])      
    ]
    nationality = “somalia” [  ; used Ethiopia dimensions
      set hhnumber (ifelse-value
        dice4 <= 0.08 [1] ; column 3
        dice4 > 0.08 and dice4 <= 0.22 [2] ; split in half using data from column 4
        dice4 > 0.22 and dice4 <= 0.35 [3] ; split in half using data from column 4
        dice4 > 0.35 and dice4 <= 0.51 [4] ; split in half using data from column 5
        dice4 > 0.51 and dice4 <= 0.67 [5] ; split in half using data from column 5
        [6])
      set hhparents (ifelse-value
        dice4 <= 0.05 [“father only”] ; column 16
        dice4 > 0.05 and dice4 <= 0.23 [“mother only”] ; column 15
        [“father and mother”])
      set hhkids_elderly (ifelse-value
        dice4 <= 0.65 [“kids only”] ; column 10 - 12 normalized to 100
        dice4 > 0.65 and dice4 <= 0.86 [“elderly only”] ; column 10 - 12 normalized to 100
        [“kids and elderly”]) 
    ]
    [ ; syria (used values from Jordan)
      set hhnumber (ifelse-value
        dice4 <= 0.04 [1] ; column 3
        dice4 > 0.04 and dice4 <= 0.16 [2] ; split in half using data from column 4
        dice4 > 0.16 and dice4 <= 0.27 [3] ; split in half using data from column 4
        dice4 > 0.27 and dice4 <= 0.43 [4] ; split in half using data from column 5
        dice4 > 0.43 and dice4 <= 0.58 [5] ; split in half using data from column 5
        [6])
      set hhparents (ifelse-value
        dice4 <= 0.02 [“father only”] ; column 16
        dice4 > 0.02 and dice4 <= 0.07 [“mother only”] ; column 15
        [“father and mother”])
      set hhkids_elderly (ifelse-value
        dice4 <= 0.68 [“kids only”] ; column 10 - 12 normalized to 100
        dice4 > 0.68 and dice4 <= 0.94 [“elderly only”] ; column 10 - 12 normalized to 100
        [“kids and elderly”]) 
    ]
)  
end
  
to setculture
  (ifelse 
    nationality = “afghan” [ ; used Hofstede dimensions from Pakistan
      set pdi 55  
      set idv 14
      set mas 50
      set uai 70
      set lto 50
      set ivr 0
    ]
    nationality = “cameroon” [ ; from Fatima-Zohra Er-Rafia report
      set pdi 78 ; 78 in Pendati, 2016, "Cultural Implications on Management Practices in Cameroon"
      set idv 25 ; 18 in Pendati, 2016, "Cultural Implications on Management Practices in Cameroon"
      set mas 53 ; 64 in Pendati, 2016, "Cultural Implications on Management Practices in Cameroon"
      set uai 54 ; 48 in Pendati, 2016, "Cultural Implications on Management Practices in Cameroon"
      set lto 16 ; 13 in Nigeria
      set ivr 78 ; 84 in Nigeria
    ]
    nationality = “congo” [ ; from Fatima-Zohra Er-Rafia report
      set pdi 77 ; 70 in Matondo, 2012, "A comparative study of five cross-cultural dimensions: Chinese construction companies in Congo"
      set idv 20 ; 23 in Matondo, 2012, "A comparative study of five cross-cultural dimensions: Chinese construction companies in Congo"
      set mas 46 ; 77 in Matondo, 2012, "A comparative study of five cross-cultural dimensions: Chinese construction companies in Congo"
      set uai 54 ; 44 in Matondo, 2012, "A comparative study of five cross-cultural dimensions: Chinese construction companies in Congo"
      set lto 19 ; 59 in Matondo, 2012, "A comparative study of five cross-cultural dimensions: Chinese construction companies in Congo"
      set ivr 80
    ]
    nationality = “iran” [ ; Hofstede dimensions
      set pdi 58
      set idv 41
      set mas 43
      set uai 59
      set lto 14
      set ivr 40
    ]
    nationality = “iraq” [ ; Hofstede dimensions
      set pdi 95
      set idv 30
      set mas 70
      set uai 85
      set lto 25
      set ivr 17
    ]
    nationality = “somalia” [ ; Hofstede dimensions (used Ethiopia dimensions)
      set pdi 70
      set idv 20
      set mas 65
      set uai 55
      set lto 0
      set ivr 46
    ]
    [ ; Hofstede dimensions Syria
      set pdi 80
      set idv 35
      set mas 52
      set uai 60
      set lto 30
      set ivr 0
    ]
)  
end


to setvalues
  set ach (idv + mas) / 2
  set pow (idv + uai + mas) / 3
  set hed (idv + ivr) / 2
  set stm (idv + (100 - uai) + (100 - pdi)) / 3
  set sd (idv + (100 - uai) + (100 - pdi)) / 3
  set ben ((100 - idv) + (100 - uai) + (100 - mas)) / 3
  set cft ((100 - idv) + uai + pdi + (100 - ivr)) / 4
  set sec ((100 - idv) + uai + pdi) / 3
  set uni ((100 - idv) + (100 - uai) + (100 - mas)) / 3
  
  set ig2-ach (random-normal (ach) (value_std_dev))
  set ig2-pow (random-normal (pow) (value_std_dev))
  set ig2-hed (random-normal (hed) (value_std_dev))
  set ig2-stm (random-normal (stm) (value_std_dev))
  set ig2-sd (random-normal (sd) (value_std_dev))
  set ig2-ben (random-normal (ben) (value_std_dev))
  set ig2-cft (random-normal (cft) (value_std_dev))
  set ig2-sec (random-normal (sec) (value_std_dev))
  set ig2-uni (random-normal (uni) (value_std_dev))
end


to setkidselderly
(ifelse
  hhkids_elderly = “kids only” [ set age “youth” setsex ]
  hhkids_elderly = “elderly only” [ set age “elderly” setsex ]
  [let x random-float 1
   if x > 0.5 [set age “youth”] [set age “elderly”]
   setsex ]
)
end 


to createpeople
  ask tent-centroids [ 
    setnationality
    sethhcharacteristics
    sprout-refugees hhmembers [
      set nationality [nationality] of patch-here
      set houselocation patch-here
      setculture
      setvalues
    ]
    (ifelse 
      hhmembers = 1 [ ask refugees-here [ 
        setage
        setsex 
        if age = “youth” [set activitycategory “unaccompaniedyouth”
        if age = “adult” and sex = “male” [set activitycategory “adult man”]
        if age = “adult” and sex = “female” [set activitycategory “adult woman no husband”]
        if age = “eldery” [set activitycategory “unaccompaniedelderly”]
      ]]
      hhmembers > 1 [
        (ifelse
          hhparents = “father only” [
            ask one-of refugees-here [ set age “adult” set sex “male” set activitycategory “adult man”
              ask other refugees-here [ setkidselderly if age = “youth” [set activitycategory “youth1parent”] if age = “elderly [set activitycategory “elderlywithfamily”] ]
          ]
          hhparents = “mother only” [
            ask one-of refugees-here [ set age “adult” set sex “female” 
              ask other refugees-here [ setkidselderly if age = “youth” [set activitycategory “youth1parent”] if age = “elderly [set activitycategory “elderlywithfamily”] ] 
            ]
          ]
          [ask one-of refugees-here [ set age “adult” set sex “male”
            ask one-of other refugees-here [ set age “adult” set sex “female”]]
           let remaining refugees-here with [age != “adult”]
           if any? remaining [ ask remaining [ setkidselderly if age = “youth” [set activitycategory “youth2parents”] if age = “elderly [set activitycategory “elderlywithfamily”] ] ]
          ]
        )
      ]
    )      
  ]
end           
   
________________
Network Module:


**Sliders / input boxes for input**
max-friends = 10


undirected-link-breed [ Friends Friend ]


to-report value-euclidean-distance [other-agent]
  report sqrt sum (list 
    ((ig2-hed - [ig2-hed] of other-agent) ^ 2)
    ((ig2-stm - [ig2-stm] of other-agent) ^ 2)
    ((ig2-sd - [ig2-sd] of other-agent) ^ 2)
    ((ig2-uni - [ig2-uni] of other-agent) ^ 2)
    ((ig2-ben - [ig2-ben] of other-agent) ^ 2)
    ((ig2-cft - [ig2-cft] of other-agent) ^ 2)
    ((ig2-sec - [ig2-sec] of other-agent) ^ 2)
    ((ig2-pow - [ig2-pow] of other-agent) ^ 2)
    ((ig2-ach - [ig2-ach] of other-agent) ^ 2))
end


to-report possible-friends
   report other refugees with [ houselocation != [houselocation] of myself and age = [age] of myself ]
end


to createfriendlinks
  ask refugees [
    create-Friends-links-with turtle-set up-to-n-of max-friends (sort-on [value-euclidean-distance myself] possible-friends)
  ]
end




________________
Activity Module:


; ticks are 1 hour intervals


let hour floor (ticks mod 24) ;the ticks are 10 minutes, so this translates it into hours
let day floor (ticks / 24) + 1 ;the ticks are 10 minutes, so this translates it into days


ask refugees with [activitycategory = “youth2parents” [
  if hour = 6 [
________________
Contagion Module:




________________
Interventions Module:


to offsite-camp-setup
  ask patch 0 0 [
      set pcolor black
      set plabel "Q"
    ]
end




to shielding-createcamp
  set list-greenzone patches with [pxcor >= 20 and pxcor <= 26 and pycor >= 7 and pycor <= 14]
  ask list-greenzone [
    set pcolor green
  ]
end
________________